@mixin font-size($min, $valVW, $max, $size) {
    font-size: ($size * 10px);
    font-size: ($size * 1rem);
    font-size: min(max(#{$min}, #{$valVW}), #{$max});
    font-size: clamp(#{$min}, #{$valVW}, #{$max});
}

@mixin fs-smallest {
    font-size: 10px;
    font-size: 1rem;
}

@mixin fs-xs {
    font-size: 12px;
    font-size: 1.2rem;
}

@mixin fs-sm {
    font-size: 15px;
    font-size: 1.5rem;
}

// @mixin fs-sm-clamp {
//     font-size: 20px;
//     font-size: 2rem;
//     font-size: min(max(17px, 1.323vw), 23px);
//     font-size: clamp(17px, 1.323vw, 23px);
//     font-size: min(max(1.7rem, 1.323vw), 2.3rem);
//     font-size: clamp(1.7rem, 1.323vw, 2.3rem);
// }

@mixin fs-md {
    font-size: 18px;
    font-size: 1.8rem;
}

@mixin fs-lg {
    font-size: 22px;
    font-size: 2.2rem;
}

// @mixin fs-lg-clamp {
//     font-size: 30px;
//     font-size: 3rem;
//     font-size: min(max(25px, 1.985vw), 35px);
//     font-size: clamp(25px, 1.985vw, 35px);
//     font-size: min(max(2.5rem, 1.985vw), 3.5rem);
//     font-size: clamp(2.5rem, 1.985vw, 3.5rem);
// }

@mixin fs-xl {
    font-size: 36px;
    font-size: 3.6rem;
}

@mixin fs-big {
    @include font-size(5rem, 10vw, 30rem, 180);
}

// @mixin fs-xl-clamp {
//     font-size: 40px;
//     font-size: 4rem;
//     font-size: min(max(32px, 2.32vw), 50px);
//     font-size: clamp(32px, 2.32vw, 50px);
//     font-size: min(max(32px, 2.32vw), 5rem);
//     font-size: clamp(32px, 2.32vw, 5rem);
// }

// @mixin fs-xxl {
//     font-size: 60;
//     font-size: 6rem;
// }

// @mixin fs-xxl-clamp {
//     font-size: 60px;
//     font-size: 6rem;
//     font-size: min(max(30px, 3.475vw), 80px);
//     font-size: clamp(30px, 3.475vw, 80px);
// }

// @mixin fs-xxxl {
//     font-size: 110px;
//     font-size: 11rem;
// }

// @mixin fs-xxxl-clamp {
//     font-size: 110px;
//     font-size: 11rem;
//     font-size: min(max(75px, 7.276vw), 150px);
//     font-size: clamp(75px, 7.276vw, 150px);
//     font-size: min(max(7.5rem, 7.276vw), 15rem);
//     font-size: clamp(7.5rem, 7.276vw, 15rem);
// }

// @mixin fs-biggest {
//     font-size: 300px;
//     font-size: 30rem;
// }

// @mixin fs-biggest-clamp {
//     font-size: 300px;
//     font-size: 30rem;
//     font-size: min(max(40px, 19.842vw), 450px);
//     font-size: clamp(40px, 19.842vw, 450px);
//     font-size: min(max(4em, 19.842vw), 45em);
//     font-size: clamp(4em, 19.842vw, 45em);

//     // @media (max-width: $sm){
//     //     @include fs-xl;
//     // }
// }

@mixin object-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
}

@mixin clean-list {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

@mixin transition($properties: all, $duration: .3s, $timing-function: ease-in-out){
    transition: $properties $duration $timing-function;
}

@mixin tag($bgcolor: $light-red, $txtcolor: $red){
    display: inline-flex;
    align-items: center;
    color: $txtcolor;
    background-color: $bgcolor;
    @include text-small-info;
    text-transform: uppercase;
    text-align: center;
    line-height: 1;
    border-radius: 50px;
    padding: .25em .75em;
    border: none;
}


@mixin btn($isBig: false, $isLight: false, $isDark: true, $isLightNeg: false, $isDarkNeg: false, $isRounded: false){

    display: flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
    font-size: 18px;
    font-weight: 400;
    width: fit-content;
    text-decoration: none!important;
    padding: .5em 1em;
    border-radius: 3px;
    cursor: pointer;
    transition: color .2s ease-in-out, background-color .2s ease-in-out;

    @if $isBig {
        font-size: 20px;
        padding: 2em 4em;

        @media (max-width: $xl){
            font-size: 18px;
            padding: 1em 2em;
        }
    }

    @if $isLight {
        color: $black;
        background-color: $white;
        border: 1px solid $white;

        &:hover {
            
        }
    }

    @if $isDark {
        color: $white;
        background-color: $black;
        border: 1px solid $black;

        &:hover {
            color: $black;
            background-color: $white;
        }
    }

    @if $isLightNeg {
        color: $white;
        background-color: transparent;
        border: 2px solid $white;
        backdrop-filter: blur(20px);
        border: 1px solid $white;
        
        &:hover {
            color: $black;
            background-color: $white;
        }
    }

    @if $isDarkNeg {
        color: $black;
        background-color: transparent;
        border: 2px solid $black;
        backdrop-filter: blur(20px);
        border: 1px solid $black;

        &:hover {
            color: $white;
            background-color: $black;
        }
    }

    @if $isRounded {
        border-radius: 100px;
    }

};